{
  "version": 3,
  "sources": ["../../../app/components/auth/AuthForm.jsx", "../../../app/routes/auth.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\auth\\\\\\\\AuthForm.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\auth\\\\AuthForm.jsx\");\n  import.meta.hot.lastModified = \"1709963922738.3123\";\n}\n// REMIX HMR END\n\nimport { Form, Link, useActionData, useSearchParams, useNavigation } from '@remix-run/react';\nimport { FaLock, FaUserPlus } from 'react-icons/fa';\nfunction AuthForm() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigation = useNavigation();\n  const validationErrors = useActionData();\n  const authMode = searchParams.get('mode') || 'login';\n  const submitBtnCaption = authMode === 'login' ? 'Login' : 'Create User';\n  const toggleBtnCaption = authMode === 'login' ? 'Create a new user' : 'Log in with existing user';\n  const isSubmitting = navigation.state !== 'idle';\n  return <Form method=\"post\" className=\"form\" id=\"auth-form\">\n      <div className=\"icon-img\">\n        {authMode === 'login' ? <FaLock /> : <FaUserPlus />}\n      </div>\n      <p>\n        <label htmlFor=\"email\">Email Address</label>\n        <input type=\"email\" id=\"email\" name=\"email\" required />\n      </p>\n      <p>\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" name=\"password\" minLength={7} />\n      </p>\n      {validationErrors && <ul>\n          {Object.values(validationErrors).map(error => <li key={error}>{error}</li>)}\n        </ul>}\n      <div className=\"form-actions\">\n        <button disabled={isSubmitting}>\n          {isSubmitting ? 'Authenticating...' : submitBtnCaption}\n        </button>\n        <Link to={authMode === 'login' ? '?mode=signup' : '?mode=login'}>\n          {toggleBtnCaption}\n        </Link>\n      </div>\n    </Form>;\n}\n_s(AuthForm, \"O+ZjMk5X/SA2B9xr48o9taZIFHQ=\", false, function () {\n  return [useSearchParams, useNavigation, useActionData];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\auth.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\auth.tsx\");\n}\n// REMIX HMR END\n\nimport AuthForm from '~/components/auth/AuthForm';\nimport { login, signup } from '~/data/auth.server';\nimport { validateCredentials } from '~/data/validation.server';\nimport authStyles from '~/styles/auth.css';\nexport default function AuthPage() {\n  return <AuthForm />;\n}\n_c = AuthPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const authMode = searchParams.get('mode') || 'login';\n  const formData = await request.formData();\n  const credentials = Object.fromEntries(formData);\n  try {\n    validateCredentials(credentials);\n  } catch (error) {\n    return error;\n  }\n  try {\n    if (authMode === 'login') {\n      return await login(credentials);\n    } else {\n      return await signup(credentials);\n    }\n  } catch (error) {\n    if (error.status === 422) {\n      return {\n        credentials: error.message\n      };\n    }\n  }\n}\nexport function links() {\n  return [{\n    rel: 'stylesheet',\n    href: authStyles\n  }];\n}\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "_c"]
}
