{
  "version": 3,
  "sources": ["../../../app/routes/expenses.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\expenses.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\expenses.$id.tsx\");\n  import.meta.hot.lastModified = \"1710142288285.3367\";\n}\n// REMIX HMR END\n\n// /expenses/<some-id> => /expenses/expense-1, /expenses/e-1\n\nimport { redirect } from '@remix-run/node';\nimport { useNavigate } from '@remix-run/react';\nimport ExpenseForm from '~/components/expenses/ExpenseForm';\nimport Modal from '~/components/util/Modal';\nimport { deleteExpense, getExpense, updateExpense } from '~/data/expenses.server';\nimport { validateExpenseInput } from '~/data/validation.server';\n// import { getExpense } from '~/data/expenses.server';\n\nexport default function UpdateExpensesPage() {\n  _s();\n  const navigate = useNavigate();\n  function closeHandler() {\n    // navigate programmatically\n    navigate('..');\n  }\n  return <Modal onClose={closeHandler}>\r\n      <ExpenseForm />\r\n    </Modal>;\n}\n_s(UpdateExpensesPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateExpensesPage;\nexport async function loader({\n  params\n}) {\n  console.log('EXPENSE ID LOADER');\n  const expenseId = params.id;\n  const expense = await getExpense(expenseId);\n  return expense;\n}\nexport async function action({\n  params,\n  request\n}) {\n  const expenseId = params.id;\n  if (request.method === 'PATCH') {\n    const formData = await request.formData();\n    const expenseData = Object.fromEntries(formData);\n    try {\n      validateExpenseInput(expenseData);\n    } catch (error) {\n      return error;\n    }\n    await updateExpense(expenseId, expenseData);\n    return redirect('/expenses');\n  } else if (request.method === 'DELETE') {\n    await deleteExpense(expenseId);\n    return {\n      deletedId: expenseId\n    };\n  }\n}\nexport function meta({\n  params,\n  location,\n  data,\n  parentsData\n}) {\n  const overallTitle = data.title;\n  return [{\n    title: overallTitle,\n    description: 'Update expense.'\n  }];\n}\nvar _c;\n$RefreshReg$(_c, \"UpdateExpensesPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,kBAAyB;AAIzB,sBAAyD;AACzD,wBAAqC;AAW/B;AAtCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,wCAA0C,EAAE;AAAA,EACrF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAae,SAAR,qBAAsC;AAC3C,KAAG;AACH,QAAM,WAAW,YAAY;AAC7B,WAAS,eAAe;AAEtB,aAAS,IAAI;AAAA,EACf;AACA,SAAO,mDAAC,iBAAM,SAAS,cACnB,6DAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,SAAa,KADV;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,GAAG,oBAAoB,gCAAgC,OAAO,WAAY;AACxE,SAAO,CAAC,WAAW;AACrB,CAAC;AACD,KAAK;AA+BE,SAAS,KAAK;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,QAAM,eAAe,KAAK;AAC1B,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf,CAAC;AACH;AACA,IAAI;AACJ,aAAa,IAAI,oBAAoB;AAErC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
